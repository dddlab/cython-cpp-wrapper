% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/gconcord.R
\name{cvplot}
\alias{cvplot}
\title{Level Plot Function of Validation Error Matrix from Cross Validation}
\usage{
cvplot(
  mat,
  col.regions = heat.colors(100),
  scales = list(x = list(rot = 90)),
  contour = TRUE,
  xlab,
  ylab,
  main,
  type,
  ...
)
}
\arguments{
\item{mat}{the validation error matrix to be visualized.}

\item{contour}{a logical flag, indicating whether to draw contour lines, see
\code{\link[lattice]{levelplot}}.}

\item{...}{other arguments in \code{\link[lattice]{levelplot}}.}

\item{col.region}{color vector to be used, see \code{\link[lattice]{levelplot}}. The default is
\code{heat.colors(100)}}
}
\description{
This function is used to visualized the validation error matrix obtained from cross validation.
}
\examples{
# Generate random data
p = 30
n = 25
sigma = matrix(1,nrow = p,ncol = p)*0.5 + diag(1,p,p)*0.5
data <- round(mvrnorm(n, mu = rep(0,p), sigma),2)

# Cross validation for both parameters
res <- cv.gconcord(data = data, lam1.vec = seq(0,1,0.02), # user-defined choices for lambda_1
                   lam2.vec = seq(0, 1, 0.02),            # user-defined choices for lambda_2
                   K = 5,                                 # 5-fold cross validation
                   method = "ista" )
cvplot(res$val.error.quantile)

# Cross validation for parameter lambda 1.
res <- cv.gconcord(data = data, lam1.vec = seq(0,1,0.02), # user-defined choices for lambda_1
                   lam2.vec = 0.05)                       # fixed lambda_2
cvplot(res$val.error.quantile)

# Cross validation for parameter lambda 2.
res <- cv.gconcord(data = data, lam1.vec = 0.05,          # fixed lambda_1
                   lam2.vec = seq(0, 8, 0.4))             # user-defined choices for lambda_2                       # 3-fold cross validation
cvplot(res$val.error.quantile)

}
